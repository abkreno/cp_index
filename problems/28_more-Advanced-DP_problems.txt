1. UVa 01172 - The Bridges of ... * (LA 3986, DP non classic, a bit of matching flavor but with left to right and OS type constraints)
2. UVa 01211 - Atomic Car Race * (LA 3404, Tokyo05, precompute array T[L], the time to run a path of length L; DP with one parameter i, where i is the checkpoint where we change tire; if i = n, we do not change the tire)
3. UVa 10069 - Distinct Subsequences (use Java BigInteger)
4. UVa 10081 - Tight Words (use doubles)
5. UVa 10364 - Square (bitmask technique can be used)
6. UVa 10419 - Sum-up the Primes (print path, prime)
7. UVa 10536 - Game of Euler (model the 4 × 4 board and 48 possible pins as bitmask; then this is a simple two player game; also see Section 5.8)
8. UVa 10651 - Pebble Solitaire (small problem size; doable with backtracking)
9. UVa 10690 - Expression Again (DP Subset Sum, with negative offset technique, with addition of simple math)
10. UVa 10898 - Combo Deal (similar to DP + bitmask; store state as integer)
11. UVa 10911 - Forming Quiz Teams * (elaborated in this section)
12. UVa 11088 - End up with More Teams (similar to UVa 10911, but this time it is about matching of three persons to one team)
13. UVa 11832 - Account Book (interesting DP; s: (id, val); use offset to handle negative numbers; t: plus or minus; print solution)
14. UVa 11218 - KTV (still solvable with complete search)
15. UVa 12324 - Philip J. Fry Problem (must make an observation that sphere > n is useless)

1. UVa 00607 - Scheduling Lectures (returns pair of information)
2. UVa 00702 - The Vindictive Coach (the implicit DAG is not trivial)
3. UVa 00812 - Trade on Verweggistan (mix between greedy and DP)
4. UVa 00882 - The Mailbox ... (s: (lo, hi, mailbox left); try all)
5. UVa 01231 - ACORN * (LA 4106, Singapore07, DP with dimension reduction, discussed in this section)
6. UVa 01238 - Free Parentheses * (LA 4143, Jakarta08, problem author: Felix Halim, discussed in this section)
7. UVa 01240 - ICPC Team Strategy (LA 4146, Jakarta08)
8. UVa 01244 - Palindromic paths (LA 4336, Amritapuri08, store the best path between i, j; the DP table contains strings)
9. UVa 10029 - Edit Step Ladders (use map as memo table)
10. UVa 10032 - Tug of War (DP Knapsack with optimization to avoid TLE)
11. UVa 10154 - Weights and Measures (LIS variant)
12. UVa 10163 - Storage Keepers (try all possible safe line L and run DP; s: id, N left; t: hire/skip person ‘id’ for looking at K storage)
13. UVa 10164 - Number Game (a bit number theory (modulo), backtracking; do memoization on DP state: (sum, taken))
14. UVa 10271 - Chopsticks (Observation: The 3rd chopstick can be any chop- stick, we must greedily select adjacent chopstick, DP state: (pos, k left), transition: Ignore this chopstick, or take this chopstick and the chopstick immediately next to it, then move to pos + 2; prune infeasible states when there are not enough chopsticks left to form triplets.)
15. UVa 10304 - Optimal Binary ... (classical DP, requires 1D range sum and Knuth-Yao speed up to get O(n 2 ) solution)
16. UVa 10604 - Chemical Reaction (the mixing can be done with any pair of chemicals until there are only two chemicals left; memoize the remaining chemicals with help of map; sorting the remaining chemicals help increasing the number of hits to the memo table)
17. UVa 10645 - Menu (s: (days left, budget left, prev dish, prev dish count); the first two parameters are knapsack-style parameter; the last two parameters are used to determine the price of that dish as first, second, and subsequent usage of the dish has different values)
18. UVa 10817 - Headmaster’s Headache (s: (id, bitmask); space: 100 × 2 2∗8 )
19. UVa 11002 - Towards Zero (a simple DP; use negative offset technique)
20. UVa 11084 - Anagram Division (using next permutation/brute force is probably not the best approach, there is a DP formulation for this)
21. UVa 11285 - Exchange Rates (maintain the best CAD & USD each day)
22. UVa 11391 - Blobs in the Board * (DP with bitmask on 2D grid)
23. UVa 12030 - Help the Winners (s: (idx, bitmask, all1, has2); t: try all shoes that has not been matched to the girl that choose dress ‘idx’)

1. UVa 00473 - Raucous Rockers (the input constraint is not clear; therefore use resizeable vector and compact states)
2. UVa 01099 - Sharing Chocolate * (LA 4794, World Finals Harbin10, discussed in this section)
3. UVa 01220 - Party at Hali-Bula * (LA 3794, Tehran06; Maximum Independent Set (MIS) problem on tree; DP; also check if the MIS is unique)
4. UVa 01222 - Bribing FIPA (LA 3797, Tehran06, DP on Tree)
5. UVa 01252 - Twenty Questions * (LA 4643, Tokyo09, DP, s: (bitmask1, bitmask2) where bitmask1 describes the features that we decide to ask and bitmask2 describes the answers of the features that we ask)
6. UVa 10149 - Yahtzee (DP with bitmask; uses card rules; tedious)
7. UVa 10482 - The Candyman Can (see Exercise 8.3.6.1*)
8. UVa 10626 - Buying Coke (see Exercise 8.3.6.1*)
9. UVa 10722 - Super Lucky Numbers (needs Java BigInteger; DP formulation must be efficient to avoid TLE; state: (N digits left, B, first, previous digit is one) and use a bit of simple combinatorics to get the answer)
10. UVa 11125 - Arrange Some Marbles (counting paths in implicit DAG; 8 dimensional DP)
11. UVa 11133 - Eigensequence (the implicit DAG is not trivial)
12. UVa 11432 - Busy Programmer (the implicit DAG is not trivial)
13. UVa 11472 - Beautiful Numbers (DP state with four parameters)
