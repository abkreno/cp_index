1. UVa 00245 - Uncompress (use the given algorithm)
2. UVa 00306 - Cipher (can be made faster by avoiding cycle)
3. UVa 00444 - Encoder and Decoder (each char is mapped to 2 or 3 digits)
4. UVa 00458 - The Decoder (shift each character’s ASCII value by -7)
5. UVa 00483 - Word Scramble (read char by char from left to right)
6. UVa 00492 - Pig Latin (ad hoc, similar to UVa 483)
7. UVa 00641 - Do the Untwist (reverse the given formula and simulate)
8. UVa 00739 - Soundex Indexing (straightforward conversion problem)
9. UVa 00795 - Sandorf’s Cipher (prepare an ‘inverse mapper’)
10. UVa 00865 - Substitution Cypher (simple character substitution mapping)
11. UVa 10019 - Funny Encryption Method (not hard, find the pattern)
12. UVa 10222 - Decode the Mad Man (simple decoding mechanism)
13. UVa 10851 - 2D Hieroglyphs ... * (ignore border; treat ’\/’ as 1/0; read from bottom)
14. UVa 10878 - Decode the Tape * (treat space/‘o’ as 0/1, then it is binary to decimal conversion)
15. UVa 10896 - Known Plaintext Attack (try all possible keys; use tokenizer)
16. UVa 10921 - Find the Telephone (simple conversion problem)
17. UVa 11220 - Decoding the message (follow instruction in the problem)
18. UVa 11278 - One-Handed Typist * (map QWERTY keys to DVORAK)
19. UVa 11541 - Decoding (read char by char and simulate)
20. UVa 11716 - Digital Fortress (simple cipher)
21. UVa 11787 - Numeral Hieroglyphs (follow the description)
22. UVa 11946 - Code Number (ad hoc)

1. UVa 00213 - Message Decoding (decrypt the message)
2. UVa 00468 - Key to Success (letter frequency mapping)
3. UVa 00554 - Caesar Cypher * (try all shifts; output formatting)
4. UVa 00632 - Compression (II) (simulate the process, use sorting)
5. UVa 00726 - Decode (frequency cypher)
6. UVa 00740 - Baudot Data ... (just simulate the process)
7. UVa 00741 - Burrows Wheeler Decoder (simulate the process)
8. UVa 00850 - Crypt Kicker II (plaintext attack, tricky test cases)
9. UVa 00856 - The Vigen`ere Cipher (3 nested loops; one for each digit)
10. UVa 11385 - Da Vinci Code * (string manipulation + Fibonacci)
11. UVa 11697 - Playfair Cipher * (follow the description, a bit tedious)

1. UVa 00499 - What’s The Frequency ... (use 1D array for frequency counting)
2. UVa 00895 - Word Problem (get the letter frequency of each word, compare with puzzle line)
3. UVa 00902 - Password Search * (read char by char; count word freq)
4. UVa 10008 - What’s Cryptanalysis? (character frequency count)
5. UVa 10062 - Tell me the frequencies (ASCII character frequency count)
6. UVa 10252 - Common Permutation * (count freq of each alphabet)
7. UVa 10293 - Word Length and Frequency (straightforward)
8. UVa 10374 - Election (use map for frequency counting)
9. UVa 10420 - List of Conquests (word frequency counting, use map)
10. UVa 10625 - GNU = GNU’sNotUnix (frequency addition n times)
11. UVa 10789 - Prime Frequency (check if a letter’s frequency is prime)
12. UVa 11203 - Can you decide it ... * (problem description is convoluted, but this problem is actually easy)
13. UVa 11577 - Letter Frequency (straightforward problem)

1. UVa 00271 - Simply Syntax (grammar check, linear scan)
2. UVa 00327 - Evaluating Simple C ... (implementation can be tricky)
3. UVa 00391 - Mark-up (use flags, tedious parsing)
4. UVa 00397 - Equation Elation (iteratively perform the next operation)
5. UVa 00442 - Matrix Chain Multiplication (properties of matrix chain mult)
6. UVa 00486 - English-Number Translator (parsing)
7. UVa 00537 - Artificial Intelligence? (simple formula; parsing is difficult)
8. UVa 01200 - A DP Problem (LA 2972, Tehran03, tokenize linear equation)
9. UVa 10906 - Strange Integration * (BNF parsing, iterative solution)
10. UVa 11148 - Moliu Fractions (extract integers, simple/mixed fractions from a line; a bit of gcd—see Section 5.5.2)
11. UVa 11357 - Ensuring Truth * (the problem description looks scary—a SAT (satisfiability) problem; the presence of BNF grammar makes one think of recursive descent parser; however, only one clause needs to be satisfied to get TRUE; a clause can be satisfied if for all variables in the clause, its inverse is not in the clause too; now, we have a much simpler problem)
12. UVa 11878 - Homework Checker * (mathematical expression parsing)
13. UVa 12543 - Longest Word (LA6150, HatYai12, iterative parser)

1. UVa 00384 - Slurpys (recursive grammar check)
2. UVa 00464 - Sentence/Phrase Generator (generate output based on the given BNF grammar)
3. UVa 00620 - Cellular Structure (recursive grammar check)
4. UVa 00622 - Grammar Evaluation * (recursive BNF grammar check/evaluation)
5. UVa 00743 - The MTM Machine (recursive grammar check)
6. UVa 10854 - Number of Paths * (recursive parsing plus counting)
7. UVa 11070 - The Good Old Times (recursive grammar evaluation)
8. UVa 11291 - Smeech * (recursive descent parser)

1. UVa 00325 - Identifying Legal ... * (see the Java solution above)
2. UVa 00494 - Kindergarten Counting ... * (see the Java solution above)
3. UVa 00576 - Haiku Review (parsing, grammar)
4. UVa 10058 - Jimmi’s Riddles * (solvable with Java regular expression)

1. UVa 00110 - Meta-loopless sort (actually an ad hoc sorting problem)
2. UVa 00159 - Word Crosses (tedious output formatting problem)
3. UVa 00320 - Border (requires flood fill technique)
4. UVa 00330 - Inventory Maintenance (use map to help)
5. UVa 00338 - Long Multiplication (tedious)
6. UVa 00373 - Romulan Spelling (check ‘g’ versus ‘p’, ad hoc)
7. UVa 00426 - Fifth Bank of ... (tokenize; sort; reformat output)
8. UVa 00445 - Marvelous Mazes (simulation, output formatting)
9. UVa 00488 - Triangle Wave * (use several loops)
10. UVa 00490 - Rotating Sentences (2d array manipulation, output formatting)
11. UVa 00570 - Stats (use map to help)
12. UVa 00645 - File Mapping (use recursion to simulate directory structure, it helps the output formatting)
13. UVa 00890 - Maze (II) (simulation, follow the steps, tedious)
14. UVa 01219 - Team Arrangement (LA 3791, Tehran06)
15. UVa 10333 - The Tower of ASCII (a real time waster problem)
16. UVa 10500 - Robot maps (simulate, output formatting)
17. UVa 10761 - Broken Keyboard (tricky with output formatting; note that ‘END’ is part of input!)
18. UVa 10800 - Not That Kind of Graph * (tedious problem)
19. UVa 10875 - Big Math (simple but tedious problem)
20. UVa 10894 - Save Hridoy (how fast can you can solve this problem?)
21. UVa 11074 - Draw Grid (output formatting)
22. UVa 11482 - Building a Triangular ... (tedious...)
23. UVa 11965 - Extra Spaces (replace consecutive spaces with only one space)
24. UVa 12155 - ASCII Diamondi * (use proper index manipulation)
25. UVa 12364 - In Braille (2D array check, check all possible digits [0..9])

1. UVa 00409 - Excuses, Excuses (tokenize and compare with list of excuses)
2. UVa 00644 - Immediate Decodability * (use brute force)
3. UVa 00671 - Spell Checker (string comparison)
4. UVa 00912 - Live From Mars (simulation, find and replace)
5. UVa 11048 - Automatic Correction ... * (flexible string comparison with respect to a dictionary)
6. UVa 11056 - Formula 1 * (sorting, case-insensitive string comparison)
7. UVa 11233 - Deli Deli (string comparison)
8. UVa 11713 - Abstract Names (modified string comparison)
9. UVa 11734 - Big Number of Teams ... (modified string comparison)

1. UVa 00153 - Permalex (find formula for this, similar to UVa 941)
2. UVa 00263 - Number Chains (sort digits, convert to integers, check cycle)
3. UVa 00892 - Finding words (basic string processing problem)
4. UVa 00941 - Permutations * (formula to get the n-th permutation)
5. UVa 01215 - String Cutting (LA 3669, Hanoi06)
6. UVa 01239 - Greatest K-Palindrome ... (LA 4144, Jakarta08, brute-force)
7. UVa 10115 - Automatic Editing (simply do what they want, uses string)
8. UVa 10126 - Zipf’s Law (sort the words to simplify this problem)
9. UVa 10197 - Learning Portuguese (must follow the description very closely)
10. UVa 10361 - Automatic Poetry (read, tokenize, process as requested)
11. UVa 10391 - Compound Words (more like data structure problem)
12. UVa 10393 - The One-Handed Typist * (follow problem description)
13. UVa 10508 - Word Morphing (number of words = number of letters + 1)
14. UVa 10679 - I Love Strings (the test data weak; just checking if T is a prefix of S is AC when it should not)
15. UVa 11452 - Dancing the Cheeky ... * (string period, small input, BF)
16. UVa 11483 - Code Creator (straightforward, use ‘escape character’)
17. UVa 11839 - Optical Reader (illegal if mark 0 or > 1 alternatives)
18. UVa 11962 - DNA II (find formula; similar to UVa 941; base 4)
19. UVa 12243 - Flowers Flourish ... (simple string tokenizer problem)
20. UVa 12414 - Calculating Yuan Fen (brute force problem involving string)
