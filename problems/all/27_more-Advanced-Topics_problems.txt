1. UVa 00131 - The Psychic Poker Player (backtracking with 2 5 bitmask to help deciding which card is retained in hand/exchanged with the top of deck; use 5! to shuffle the 5 cards in hand and get the best value)
2. UVa 00710 - The Game (backtracking with memoization/pruning)
3. UVa 00711 - Dividing up (reduce search space first before backtracking)
4. UVa 00989 - Su Doku (classic Su Doku puzzle; this problem is NP complete but this instance is solvable with backtracking with pruning; use bitmask to speed up the check of available digits)
5. UVa 01052 - Bit Compression (LA 3565 - WorldFinals SanAntonio06, backtracking with some form of bitmask)
6. UVa 10309 - Turn the Lights Off * (brute force the first row in 2 10 , the rest follows)
7. UVa 10318 - Security Panel (the order is not important, so we can try pressing the buttons in increasing order, row by row, column by column; when pressing one button, only the 3×3 square around it is affected; therefore after we press button (i, j), light (i − 1, j − 1) must be on (as no button afterward will affect this light); this check can be used to prune the backtracking)
8. UVa 10890 - Maze (looks like a DP problem but the state—involving bitmask— cannot be memoized, fortunately the grid size is ‘small’)
9. UVa 10957 - So Doku Checker (very similar with UVa 989; if you can solve that one, you can modify your code a bit to solve this one)
10. UVa 11195 - Another n-Queen Problem * (see Exercise 3.2.1.3* and the discussion in Section 8.2.1)
11. UVa 11065 - A Gentlemen’s Agreement * (independent set, bitmask helps in speeding up the solution; see the discussion in Section 8.2.1)
12. UVa 11127 - Triple-Free Binary Strings (backtracking with bitmask)
13. UVa 11464 - Even Parity (brute force the first row in 2 15 , the rest follows)
14. UVa 11471 - Arrange the Tiles (reduce search space by grouping tiles of the same type; recursive backtracking)

1. UVa 00321 - The New Villa (s: (position, bitmask 2 10 ), print the path)
2. UVa 00658 - It’s not a Bug ... (s: bitmask—whether a bug is present or not, use Dijkstra’s as the State-Space graph is weighted)
3. UVa 00928 - Eternal Truths (s: (row, col, direction, step))
4. UVa 00985 - Round and Round ... * (4 rotations is the same as 0 rotations, s: (row, col, rotation = [0..3]); find the shortest path from state [1][1][0] to state [R][C][x] where 0 ≤ x ≤ 3)
5. UVa 01057 - Routing (LA 3570, World Finals SanAntonio06, use Floyd Warshall’s to get APSP information; then model the original problem as another weighted SSSP problem solvable with Dijkstra’s)
6. UVa 01251 - Repeated Substitution ... (LA 4637, Tokyo09, SSSP solvable with BFS)
7. UVa 01253 - Infected Land (LA 4645, Tokyo09, SSSP solvable with BFS, tedious state modeling)
8. UVa 10047 - The Monocyle (s: (row, col, direction, color); BFS)
9. UVa 10097 - The Color game (s: (N1, N2); implicit unweighted graph; BFS)
10. UVa 10923 - Seven Seas (s: (ship position, location of enemies, location of obstacles, steps so far); implicit weighted graph; Dijkstra’s)
11. UVa 11198 - Dancing Digits * (s: permutation; BFS; tricky to code)
12. UVa 11329 - Curious Fleas * (s: bitmask of 26 bits, 4 to describe the position of the die in the 4 × 4 grid, 16 to describe if a cell has a flea, 6 to describe the sides of the die that has a flea; use map; tedious to code)
13. UVa 11513 - 9 Puzzle (reverse the role of source and destination)
14. UVa 11974 - Switch The Lights (BFS on implicit unweighted graph)
15. UVa 12135 - Switch Bulbs (LA 4201, Dhaka08, similar to UVa 11974)

1. UVa 00652 - Eight (classical sliding block 8-puzzle problem, IDA*)
2. UVa 01098 - Robots on Ice * (LA 4793, World Finals Harbin10, see the discussion in Section 8.2.2; however, there is a faster ‘meet in the middle’ solution for this problem)
3. UVa 01217 - Route Planning (LA 3681, Kaohsiung06, solvable with A*/IDA*; test data likely only contains up to 15 stops which already include the starting and the last stop on the route)
4. UVa 10181 - 15-Puzzle Problem * (similar as UVa 652, but this one is larger, we can use IDA*)
5. UVa 11163 - Jaguar King (another puzzle game solvable with IDA*)
6. UVa 11212 - Editing a Book * (meet in the middle, see Section 8.2.4)
