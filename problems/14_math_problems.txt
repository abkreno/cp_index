1. UVa 10055 - Hashmat the Brave Warrior (absolute function; use long long)
2. UVa 10071 - Back to High School ... (super simple: outputs 2 × v × t)
3. UVa 10281 - Average Speed (distance = speed × time elapsed)
4. UVa 10469 - To Carry or not to Carry (super simple if you use xor)
5. UVa 10773 - Back to Intermediate ... * (several tricky cases)
6. UVa 11614 - Etruscan Warriors Never ... (find roots of a quadratic equation)
7. UVa 11723 - Numbering Road * (simple math)
8. UVa 11805 - Bafana Bafana (very simple O(1) formula exists)
9. UVa 11875 - Brick Game * (get median of a sorted input)
10. UVa 12149 - Feynman (finding the pattern; square numbers)
11. UVa 12502 - Three Families (must understand the ‘wording trick’ first)

1. UVa 00100 - The 3n + 1 problem (do as asked; note that j can be < i)
2. UVa 00371 - Ackermann Functions (similar to UVa 100)
3. UVa 00382 - Perfection * (do trial division)
4. UVa 00834 - Continued Fractions (do as asked)
5. UVa 00906 - Rational Neighbor (compute c, from d = 1 until ab < d c )
6. UVa 01225 - Digit Counting * (LA 3996, Danang07, N is small)
7. UVa 10035 - Primary Arithmetic (count the number of carry operations)
8. UVa 10346 - Peter’s Smoke * (interesting simulation problem)
9. UVa 10370 - Above Average (compute average, see how many are above it)
10. UVa 10783 - Odd Sum (input range is very small, just brute force it)
11. UVa 10879 - Code Refactoring (just use brute force)
12. UVa 11150 - Cola (similar to UVa 10346, be careful with boundary cases!)
13. UVa 11247 - Income Tax Hazard (brute force around the answer to be safe)
14. UVa 11313 - Gourmet Games (similar to UVa 10346)
15. UVa 11689 - Soda Surpler (similar to UVa 10346)
16. UVa 11877 - The Coco-Cola Store (similar to UVa 10346)
17. UVa 11934 - Magic Formula (just do plain brute-force)
18. UVa 12290 - Counting Game (no ‘-1’ in the answer)
19. UVa 12527 - Different Digits (try all, check repeated digits)

1. UVa 00493 - Rational Spiral (simulate the spiral process)
2. UVa 00550 - Multiplying by Rotation (rotamult property; try one by one starting from 1 digit) √
3. UVa 00616 - Coconuts, Revisited * (brute force up to n, get pattern)
4. UVa 00697 - Jack and Jill (requires some output formatting and basic knowledge about Physics)
5. UVa 00846 - Steps (uses the sum of arithmetic progression formula)
6. UVa 10025 - The ? 1 ? 2 ? ... (simplify the formula first, iterative)
7. UVa 10257 - Dick and Jane (we can brute force the integer ages of spot, puff, and yertle; need some mathematical insights)
8. UVa 10624 - Super Number (backtracking with divisibility check)
9. UVa 11130 - Billiard bounces * (use billiard table reflection technique: mirror the billiard table to the right (and/or top) so that we will only deal with one straight line instead of bouncing lines)
10. UVa 11254 - Consecutive Integers * (use sum of arithmetic progression: n = 2 r × (2 × a + r − 1) or a = (2 × n + r − r 2 )/(2 × r); as n is given, √ brute force all values of r from 2n down to 1, stop at the first valid a)
11. UVa 11968 - In The Airport (average; fabs; if ties, choose the smaller one!)

1. UVa 10014 - Simple calculations (derive the required formula)
2. UVa 10170 - The Hotel with Infinite ... (one liner formula exists)
3. UVa 10499 - The Land of Justice (simple formula exists)
4. UVa 10696 - f91 (very simple formula simplification)
5. UVa 10751 - Chessboard * (trival for N = 1 and N = 2; derive the formula first for N > 2; hint: use diagonal as much as possible)
6. UVa 10940 - Throwing Cards Away II * (find pattern with brute force)
7. UVa 11202 - The least possible effort (consider symmetry and flip)
8. UVa 12004 - Bubble Sort * (try small n; get the pattern; use long long)
9. UVa 12027 - Very Big Perfect Square (sqrt trick)

1. UVa 00651 - Deck (use the given sample I/O to derive the simple formula)
2. UVa 00913 - Joana and The Odd ... (derive the short formulas)
3. UVa 10161 - Ant on a Chessboard * (involves sqrt, ceil...)
4. UVa 10493 - Cats, with or without Hats (tree, derive the formula)
5. UVa 10509 - R U Kidding Mr. ... (there are only three different cases)
6. UVa 10666 - The Eurocup is here (analyze the binary representation of X)
7. UVa 10693 - Traffic Volume (derive the short Physics formula)
8. UVa 10710 - Chinese Shuffle (the formula is a bit hard to derive; involving modPow; see Section 5.3 or Section 9.21)
9. UVa 10882 - Koerner’s Pub (inclusion-exclusion principle)
10. UVa 10970 - Big Chocolate (direct formula exists, or use DP)
11. UVa 10994 - Simple Addition (formula simplification)
12. UVa 11231 - Black and White Painting * (there is O(1) formula)
13. UVa 11246 - K-Multiple Free Set (derive the formula)
14. UVa 11296 - Counting Solutions to an ... (simple formula exists)
15. UVa 11298 - Dissecting a Hexagon (simple maths; derive the pattern first)
16. UVa 11387 - The 3-Regular Graph (impossible for odd n or when n = 2; if n is a multiple of 4, consider complete graph K 4 ; if n = 6 + k × 4, consider one 3-Regular component of 6 vertices and the rest are K 4 as in previous case)
17. UVa 11393 - Tri-Isomorphism (draw several small K n , derive the pattern)
18. UVa 11718 - Fantasy of a Summation * (convert loops to a closed form formula, use modPow to compute the results, see Section 5.3 and 9.21)

1. UVa 00264 - Count on Cantor * (math, grid, pattern)
2. UVa 00808 - Bee Breeding (math, grid, similar to UVa 10182)
3. UVa 00880 - Cantor Fractions (math, grid, similar to UVa 264)
4. UVa 10182 - Bee Maja * (math, grid)
5. UVa 10233 - Dermuba Triangle * (the number of items in row forms arithmetic progression series; use hypot)
6. UVa 10620 - A Flea on a Chessboard (just simulate the jumps)
7. UVa 10642 - Can You Solve It? (the reverse of UVa 264)
8. UVa 10964 - Strange Planet (convert the coordinates to (x, y), then this problem is just about finding Euclidean distance between two coordinates)
9. SPOJ 3944 - Bee Walk (a grid problem)

1. UVa 00136 - Ugly Numbers (use similar technique as UVa 443)
2. UVa 00138 - Street Numbers (arithmetic progression formula, precalculated)
3. UVa 00413 - Up and Down Sequences (simulate; array manipulation)
4. UVa 00443 - Humble Numbers * (try all 2 i × 3 j × 5 k × 7 l , sort)
5. UVa 00640 - Self Numbers (DP bottom up, generate the numbers, flag once)
6. UVa 00694 - The Collatz Sequence (similar to UVa 100)
7. UVa 00962 - Taxicab Numbers (pre-calculate the answer)
8. UVa 00974 - Kaprekar Numbers (there are not that many Kaprekar numbers)
9. UVa 10006 - Carmichael Numbers (non prime which has ≥ 3 prime factors)
10. UVa 10042 - Smith Numbers * (prime factorization, sum the digits)
11. UVa 10049 - Self-describing Sequence (enough to get past > 2G by storing only the first 700K numbers of the Self-describing sequence)
12. UVa 10101 - Bangla Numbers (follow the problem description carefully)
13. UVa 10408 - Farey Sequences * (first, generate (i, j) pairs such that gcd(i, j) = 1, then sort)
14. UVa 10930 - A-Sequence (ad-hoc, follow the rules given in description)
15. UVa 11028 - Sum of Product (this is ‘dartboard sequence’)
16. UVa 11063 - B2 Sequences (see if a number is repeated, be careful with -ve) √ √
17. UVa 11461 - Square Numbers (answer is b − a − 1)
18. UVa 11660 - Look-and-Say sequences (simulate, break after j-th character)
19. UVa 11970 - Lucky Numbers (square numbers, divisibility check, bf)

1. UVa 00107 - The Cat in the Hat (use logarithm, power)
2. UVa 00113 - Power Of Cryptography (use exp(ln(x) × y))
3. UVa 00474 - Heads Tails Probability (this is just a log & pow exercise)
4. UVa 00545 - Heads (use logarithm, power, similar to UVa 474)
5. UVa 00701 - Archaelogist’s Dilemma * (use log to count # of digits)
6. UVa 01185 - BigNumber (number of digits of factorial, use logarithm to solve it; log(n!) = log(n × (n − 1) . . . × 1) = log(n) + log(n − 1) + . . . + log(1))
7. UVa 10916 - Factstone Benchmark * (use logarithm, power)
8. UVa 11384 - Help is needed for Dexter (finding the smallest power of two greater than n, can be solved easily using ceil(eps + log 2 (n)))
9. UVa 11556 - Best Compression Ever (related to power of two, use long long)
10. UVa 11636 - Hello World (uses logarithm)
11. UVa 11666 - Logarithms (find the formula!)
12. UVa 11714 - Blind Sorting (use decision tree model to find min and second min; eventually the solution only involves logarithm)
13. UVa 11847 - Cut the Silver Bar * (O(1) math formula exists: log 2 (n) )
14. UVa 11986 - Save from Radiation (log 2 (N + 1); manual check for precision)
15. UVa 12416 - Excessive Space Remover (the answer is log 2 of the max consecutive spaces in a line)

1. UVa 00126 - The Errant Physicist (polynomial multiplication and tedious output formatting)
2. UVa 00392 - Polynomial Showdown (follow the orders: output formatting)
3. UVa 00498 - Polly the Polynomial * (polynomial evaluation)
4. UVa 10215 - The Largest/Smallest Box (two trivial cases for smallest; derive the formula for largest which involves quadratic equation)
5. UVa 10268 - 498’ * (polynomial derivation; Horner’s rule)
6. UVa 10302 - Summation of Polynomials (use long double)
7. UVa 10326 - The Polynomial Equation (given roots of the polynomial, reconstruct the polynomial; formatting)
8. UVa 10586 - Polynomial Remains * (division; manipulate coefficients)
9. UVa 10719 - Quotient Polynomial (polynomial division and remainder)
10. UVa 11692 - Rain Fall (use algebraic manipulation to derive a quadratic equation; solve it; special case when H < L)

1. UVa 00377 - Cowculations * (base 4 operations)
2. UVa 00575 - Skew Binary * (base modification)
3. UVa 00636 - Squares (base number conversion up to base 99; Java BigInteger cannot be used as it is MAX RADIX is limited to 36)
4. UVa 10093 - An Easy Problem (try all)
5. UVa 10677 - Base Equality (try all from r2 to r1)
6. UVa 10931 - Parity * (convert decimal to binary, count number of ‘1’s)
7. UVa 11005 - Cheapest Base (try all possible bases from 2 to 36)
8. UVa 11121 - Base -2 (search for the term ‘negabinary’)
9. UVa 11398 - The Base-1 Number System (just follow the new rules)
10. UVa 12602 - Nice Licence Plates (simple base conversion)
11. SPOJ 0739 - The Moronic Cowmpouter (find the representation in base -2)
12. IOI 2011 - Alphabets (practice task; use the more space-efficient base 26)

1. UVa 00276 - Egyptian Multiplication (multiplication of Egyptian hieroglyphs)
2. UVa 00496 - Simply Subsets (set manipulation)
3. UVa 00613 - Numbers That Count (analyze the number; determine the type; similar spirit with the cycle finding problem in Section 5.7)
4. UVa 10137 - The Trip * (be careful with precision error)
5. UVa 10190 - Divide, But Not Quite ... (simulate the process)
6. UVa 11055 - Homogeneous Square (not classic, observation needed to avoid brute-force solution)
7. UVa 11241 - Humidex (the hardest case is computing Dew point given temperature and Humidex; derive it with Algebra) √
8. UVa 11526 - H(n) * (brute force up to n, find the pattern, avoid TLE)
9. UVa 11715 - Car (physics simulation)
10. UVa 11816 - HST (simple math, precision required)
11. UVa 12036 - Stable Grid * (use pigeon hole principle)
