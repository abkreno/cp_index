1. UVa 00495 - Fibonacci Freeze (very easy with Java BigInteger)
2. UVa 00580 - Critical Mass (related to Tribonacci series; Tribonacci numbers are the generalization of Fibonacci numbers; it is defined by T 1 = 1, T 2 = 1, T 3 = 2, and T n = T n−1 + T n−2 + T n−3 for n ≥ 4)
3. UVa 00763 - Fibinary Numbers * (Zeckendorf representation, greedy, use Java BigInteger)
4. UVa 00900 - Brick Wall Patterns (combinatorics, the pattern ≈ Fibonacci)
5. UVa 00948 - Fibonaccimal Base (Zeckendorf representation, greedy)
6. UVa 01258 - Nowhere Money (LA 4721, Phuket09, Fibonacci variant, Zeckendorf representation, greedy)
7. UVa 10183 - How many Fibs? (get the number of Fibonaccis when generating them; BigInteger)
8. UVa 10334 - Ray Through Glasses * (combinatorics, Java BigInteger)
9. UVa 10450 - World Cup Noise (combinatorics, the pattern ≈ Fibonacci)
10. UVa 10497 - Sweet Child Make Trouble (the pattern ≈ Fibonacci)
11. UVa 10579 - Fibonacci Numbers (very easy with Java BigInteger)
12. UVa 10689 - Yet Another Number ... * (easy if you know Pisano (a.k.a Fibonacci) period)
13. UVa 10862 - Connect the Cable Wires (the pattern ends up ≈ Fibonacci)
14. UVa 11000 - Bee (combinatorics, the pattern is similar to Fibonacci)
15. UVa 11089 - Fi-binary Number (the list of Fi-binary Numbers follow the Zeckendorf’s theorem)
16. UVa 11161 - Help My Brother (II) (Fibonacci + median)
17. UVa 11780 - Miles 2 Km (the background problem is Fibonacci numbers)

1. UVa 00326 - Extrapolation using a ... (difference table)
2. UVa 00369 - Combinations (be careful with overflow issue)
3. UVa 00485 - Pascal Triangle of Death (binomial coefficients + BigInteger)
4. UVa 00530 - Binomial Showdown (work with doubles; optimize computation)
5. UVa 00911 - Multinomial Coefficients (there is a formula for this, result = n!/(z 1 ! × z 2 ! × z 3 ! × ... × zk!))
6. UVa 10105 - Polynomial Coefficients (n!/(n 1 ! × n 2 ! × ... × n k !); however, the derivation is complex)
7. UVa 10219 - Find the Ways * (count the length of n C k ; BigInteger)
8. UVa 10375 - Choose and Divide (the main task is to avoid overflow)
9. UVa 10532 - Combination, Once Again (modified binomial coefficient)
10. UVa 10541 - Stripe * (a good combinatorics problem; compute how many white cells are there via N white = N - sum of all K integers; imagine we have one more white cell at the very front, we can now determine the answer by placing black stripes after K out of N white + 1 whites, or N white+1 C K (use Java BigInteger); however, if K > N white + 1 then the answer is 0)
11. UVa 11955 - Binomial Theorem * (pure application; DP)

1. UVa 00991 - Safe Salutations * (Catalan Numbers)
2. UVa 10007 - Count the Trees * (answer is Cat(n) × n!; BigInteger)
3. UVa 10223 - How Many Nodes? (Precalculate the answers as there are only 19 Catalan Numbers < 2 32 − 1)
4. UVa 10303 - How Many Trees (generate Cat(n) as shown in this section, use Java BigInteger)
5. UVa 10312 - Expression Bracketing * (the number of binary bracketing can be counted by Cat(n); the total number of bracketing can be computed using Super-Catalan numbers)
6. UVa 10643 - Facing Problems With ... (Cat(n) is part of a bigger problem)

1. UVa 11115 - Uncle Jack (N D , use Java BigInteger)
2. UVa 11310 - Delivery Debacle * (requires DP: let dp[i] be the number of ways the cakes can be packed for a box 2 × i. Note that it is possible to use two ‘L shaped’ cakes to form a 2 × 3 shape)
3. UVa 11401 - Triangle Counting * (spot the pattern, coding is easy)
4. UVa 11480 - Jimmy’s Balls (try all r, but simpler formula exists)
5. UVa 11597 - Spanning Subtree * (uses knowledge of graph theory, the answer is very trivial)
6. UVa 11609 - Teams (N × 2 N −1 , use Java BigInteger for the modPow part)
7. UVa 12463 - Little Nephew (double socks & shoes to simplify the problem)

1. UVa 01224 - Tile Code (derive formula from small instances)
2. UVa 10079 - Pizza Cutting (derive the one liner formula)
3. UVa 10359 - Tiling (derive the formula, use Java BigInteger)
4. UVa 10733 - The Colored Cubes (Burnside’s lemma)
5. UVa 10784 - Diagonal * (the number of diagonals in n-gon = n∗(n−3)/2, use it to derive the solution)
6. UVa 10790 - How Many Points of ... (uses arithmetic progression formula)
7. UVa 10918 - Tri Tiling (there are two related recurrences here)
8. UVa 11069 - A Graph Problem * (use Dynamic Programming)
9. UVa 11204 - Musical Instruments (only first choice matters)
10. UVa 11270 - Tiling Dominoes (sequence A004003 in OEIS)
11. UVa 11538 - Chess Queen * (count along rows, columns, and diagonals)
12. UVa 11554 - Hapless Hedonism (similar to UVa 11401)
13. UVa 12022 - Ordering T-shirts (number of ways n competitors can rank in a competition, allowing for the possibility of ties, see http://oeis.org/A000670)
