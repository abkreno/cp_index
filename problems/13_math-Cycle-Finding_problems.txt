1. UVa 00202 - Repeating Decimals (do expansion digit by digit until it cycles)
2. UVa 00275 - Expanding Fractions (same as UVa 202 except the output format)
3. UVa 00350 - Pseudo-Random Numbers * (discussed in this section)
4. UVa 00944 - Happy Numbers (similar to UVa 10591)
5. UVa 10162 - Last Digit (cycle after 100 steps, use Java BigInteger to read the input, precalculate)
6. UVa 10515 - Power et al (concentrate on the last digit)
7. UVa 10591 - Happy Number (this sequence is ‘eventually periodic’)
8. UVa 11036 - Eventually periodic ... (cycle-finding, evaluate Reverse Polish f with a stack—also see Section 9.27)
9. UVa 11053 - Flavius Josephus ... * (cycle-finding, the answer is N − λ)
10. UVa 11549 - Calculator Conundrum (repeat squaring with limited digits until it cycles; that is, the Floyd’s cycle-finding algorithm is only used to detect the cycle, we do not use the value of μ or λ; instead, we keep track the largest iterated function value found before any cycle is encountered)
11. UVa 11634 - Generate random ... * (use DAT of size 10K, extract digits; the programming trick to square 4 digits ‘a’ and get the resulting middle 4 digits is a = (a * a / 100) % 10000)
12. UVa 12464 - Professor Lazy, Ph.D. (although n can be very huge, the pattern is actually cyclic; find the length of the cycle l and modulo n with l)
