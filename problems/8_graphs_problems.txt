1. UVa 00118 - Mutant Flatworld Explorers (traversal on implicit graph)
2. UVa 00168 - Theseus and the ... (Adjacency Matrix, parsing, traversal)
3. UVa 00280 - Vertex (graph, reachability test by traversing the graph)
4. UVa 00318 - Domino Effect (traversal, be careful of corner cases)
5. UVa 00614 - Mapping the Route (traversal on implicit graph)
6. UVa 00824 - Coast Tracker (traversal on implicit graph)
7. UVa 10113 - Exchange Rates (just graph traversal, but uses fraction and gcd, see the relevant sections in Chapter 5)
8. UVa 10116 - Robot Motion (traversal on implicit graph)
9. UVa 10377 - Maze Traversal (traversal on implicit graph)
10. UVa 10687 - Monitoring the Amazon (build graph, geometry, reachability)
11. UVa 11831 - Sticker Collector ... * (implicit graph; input order is ‘NSEW’ !)
12. UVa 11902 - Dominator (disable vertex one by one, check if the reachability from vertex 0 changes)
13. UVa 11906 - Knight in a War Grid * (DFS/BFS for reachability, several tricky cases; be careful when M = 0 N = 0 M = N)
14. UVa 12376 - As Long as I Learn, I Live (simulated greedy traversal on DAG)
15. UVa 12442 - Forwarding Emails * (modified DFS, special graph)
16. UVa 12582 - Wedding of Sultan (given graph DFS traversal, count the degree of each vertex)
17. IOI 2011 - Tropical Garden (graph traversal; DFS; involving cycle)

1. UVa 00260 - Il Gioco dell’X (6 neighbors per cell!)
2. UVa 00352 - The Seasonal War (count # of connected components (CC))
3. UVa 00459 - Graph Connectivity (also solvable with ‘union find’)
4. UVa 00469 - Wetlands of Florida (count size of a CC; discussed in this section)
5. UVa 00572 - Oil Deposits (count number of CCs, similar to UVa 352)
6. UVa 00657 - The Die is Cast (there are three ‘colors’ here)
7. UVa 00722 - Lakes (count the size of CCs)
8. UVa 00758 - The Same Game (floodfill++)
9. UVa 00776 - Monkeys in a Regular ... (label CCs with indices, format output)
10. UVa 00782 - Countour Painting (replace ‘ ’ with ‘#’ in the grid)
11. UVa 00784 - Maze Exploration (very similar with UVa 782)
12. UVa 00785 - Grid Colouring (also very similar with UVa 782)
13. UVa 00852 - Deciding victory in Go (interesting board game ‘Go’)
14. UVa 00871 - Counting Cells in a Blob (find the size of the largest CC)
15. UVa 01103 - Ancient Messages * (LA 5130, World Finals Orlando11; major hint: each hieroglyph has unique number of white connected component; then it is an implementation exercise to parse the input and run flood fill to determine the number of white CC inside each black hieroglyph)
16. UVa 10336 - Rank the Languages (count and rank CCs with similar color)
17. UVa 10707 - 2D - Nim (check graph isomorphism; a tedious problem; involving connected components)
18. UVa 10946 - You want what filled? (find CCs and rank them by their size)
19. UVa 11094 - Continents * (tricky flood fill as it involves scrolling)
20. UVa 11110 - Equidivisions (flood fill + satisfy the constraints given)
21. UVa 11244 - Counting Stars (count number of CCs)
22. UVa 11470 - Square Sums (you can do ‘flood fill’ layer by layer; however, there is other way to solve this problem, e.g. by finding the patterns)
23. UVa 11518 - Dominos 2 (unlike UVa 11504, we treat SCCs as simple CCs)
24. UVa 11561 - Getting Gold (flood fill with extra blocking constraint)
25. UVa 11749 - Poor Trade Advisor (find largest CC with highest average PPA)
26. UVa 11953 - Battleships * (interesting twist of flood fill problem)

1. UVa 00124 - Following Orders (use backtracking to generate valid toposorts)
2. UVa 00200 - Rare Order (toposort)
3. UVa 00872 - Ordering * (similar to UVa 124, use backtracking)
4. UVa 10305 - Ordering Tasks * (run toposort algorithm in this section)
5. UVa 11060 - Beverages * (must use Kahn’s algorithm—the ‘modified BFS’ topological sort)
6. UVa 11686 - Pick up sticks (toposort + cycle check)

1. UVa 10004 - Bicoloring * (bipartite graph check)
2. UVa 10505 - Montesco vs Capuleto (bipartite graph, take max(left, right))
3. UVa 11080 - Place the Guards * (bipartite graph check, some tricky cases)
4. UVa 11396 - Claw Decomposition * (it is just a bipartite graph check)

1. UVa 00315 - Network * (finding articulation points)
2. UVa 00610 - Street Directions (finding bridges)
3. UVa 00796 - Critical Links * (finding bridges)
4. UVa 10199 - Tourist Guide (finding articulation points)
5. UVa 10765 - Doves and Bombs * (finding articulation points)

1. UVa 00247 - Calling Circles * (SCC + printing solution)
2. UVa 01229 - Sub-dictionary (LA 4099, Iran07, identify the SCC of the graph; these vertices and the vertices that have path towards them (e.g. needed to understand these words too) are the answers of the question)
3. UVa 10731 - Test (SCC + printing solution)
4. UVa 11504 - Dominos * (interesting problem: count |SCCs| without incoming edge from a vertex outside that SCC)
5. UVa 11709 - Trust Groups (find number of SCC)
6. UVa 11770 - Lighting Away (similar to UVa 11504)
7. UVa 11838 - Come and Go * (check if graph is strongly connected)
